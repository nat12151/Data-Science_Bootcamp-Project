-- Restaurant Owners
-- 5 Tables
-- 1x Fact, 4x Dimension
-- search google, how to add foreign key
-- write SQL 3-5 queries analyze data
-- 1x subquery/ with

-- sqlite command
.mode markdown
.header on 

-- Dimension #1 Menu
CREATE TABLE menu_bevs (
    menu_id INT PRIMARY KEY,
    name TEXT,
    unit_price REAL,
    FOREIGN KEY (name) REFERENCES individualmenu(name)
);

CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    date_order date,
    customer_name TEXT,
    name,
    unit REAL,
    FOREIGN KEY (customer_name) REFERENCES customername(customer_name)
);


CREATE TABLE employees (
    employee_id INT PRIMARY KEY,
    employee_name TEXT,
    name TEXT,
    FOREIGN KEY (employee_name) REFERENCES employeename(employee_name)
);

INSERT INTO menu_bevs VALUES 
    (1, 'Water', 20),
    (2, 'Juice', 30),
    (3, 'Heinekein', 60),
    (4, 'Singha', 70),
    (5, 'Leo', 75);


INSERT INTO customers VALUES 
    (1, '2022-01-01' , 'A', 'Water', 3),
    (2, '2022-01-06' , 'B', 'Juice', 4),
    (3, '2022-01-07' , 'C', 'Singha', 5),
    (4, '2022-01-08' , 'D', 'Heinekein', 1),
    (5, '2022-01-14' , 'E', 'Juice', 2),
    (6, '2022-01-16' , 'F', 'Juice', 3),
    (7, '2022-01-18' , 'G', 'Leo', 4),
    (8, '2022-01-24' , 'B', 'Juice', 2),
    (9, '2022-01-26' , 'C', 'Heinekein', 3),
    (10, '2022-01-29' , 'E', 'Leo', 4);

INSERT INTO employees VALUES 
    (1, 'Al' , 'Water'),
    (2, 'pa' , 'Juice'),
    (3, 'ca' , 'Heinekein'),
    (4, 'Mee' , 'Singha'),
    (5, 'Ging' , 'Leo');

SELECT * FROM menu_bevs;
SELECT * FROM customers;
SELECT * FROM employees;

CREATE TABLE amount AS 
SELECT 
  d2.customer_name AS cus_name,
  d2.date_order AS date_or,
  d1.menu_id AS menu_i,
  d2.name AS m_name,
  d1.unit_price AS unit_p,
  d2.unit AS un,
  d3.employee_name AS em_name,
  (unit_price*unit) AS total_price
  FROM menu_bevs AS d1
  JOIN customers AS d2 ON d1.name = d2.name
  JOIN employees AS d3 ON d3.name = d2.name
ORDER BY 6 desc;

SELECT * FROM amount;

SELECT 
  menu_i,
  m_name,
  sum(total_price) AS total_each
FROM amount
GROUP BY menu_i;

CREATE TABLE month_1 as
SELECT 
  date_or,
  sum(total_price) AS total_each
FROM amount
GROUP BY date_or;

select * from month_1;

select
  sum(total_each),
  avg(total_each),
  min(total_each),
  max(total_each)
FROM 
  (SELECT 
  date_or,
  sum(total_price) AS total_each
  FROM amount)
